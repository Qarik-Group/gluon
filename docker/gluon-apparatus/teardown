#!/bin/bash
set -eu

if [[ -n ${BOSH_ENVIRONMENT:-} ]]; then
  echo "##################################"
  echo "#"
  echo "# Using BOSH Director at $BOSH_ENVIRONMENT"
  echo "# to delete deployment $BOSH_DEPLOYMENT"
  echo "#"
  echo "##################################"
  echo; echo
  set -x
  bosh delete-deployment -n --tty "$@"
  set +x
  echo; echo

else
  echo "##################################"
  echo "#"
  echo "# Cloning deployment from"
  echo "#   $UPSTREAM_REPO"
  echo "#   ref $UPSTREAM_REF"
  echo "#"
  echo "##################################"

  git clone $UPSTREAM_REPO deployment
  cd deployment
  git checkout $UPSTREAM_REF
  echo; echo

  echo "##################################"
  echo "#"
  echo "# Using $UPSTREAM_ENTRYPOINT..."
  echo "#"
  echo "##################################"
  echo; echo

  set -x
  envwrap bosh delete-env -n $UPSTREAM_ENTRYPOINT \
    --state=/bosh/state/state.json \
    --vars-store=/tmp/creds.yml \
    --vars-env=GLUON \
    --tty \
    "$@"
  set +x
  echo; echo

  echo "##################################"
  echo "#"
  echo "# Marking credentials / state file"
  echo "#   in Secret $CREDS_SECRET_NAME"
  echo "#  and ConfigMap $CREDS_STATE_FILE_CONFIG_MAP"
  echo "#  (respectively)"
  echo "#"
  echo "##################################"
  echo; echo

  kubectl config set-cluster here \
    --server=https://kubernetes.default \
    --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  kubectl config set-credentials sa \
    --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
  kubectl config set-context here \
    --cluster=here \
    --user=sa

  when=$(date)
  kubectl annotate --overwrite -n $POD_NAMESPACE \
    configmap/$CREDS_STATE_FILE_CONFIG_MAP \
    "gluon.starkandwayne.com/retired=$when"
  kubectl annotate --overwrite -n $POD_NAMESPACE \
    secret/$CREDS_SECRET_NAME \
    "gluon.starkandwayne.com/retired=$when"
fi

exit 0
